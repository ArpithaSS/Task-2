1) Attached index.html and script.js file

2)Give a write up on Difference between copy by value and copy by reference.

In Call by value method original value is not modified whereas, in Call by reference method, the original value is modified.
In Call by value, a copy of the variable is passed whereas in Call by reference, a variable itself is passed.
In Call by value, actual and formal arguments will be created in different memory locations whereas in Call by reference, actual and formal arguments will be created in the same memory location.
Call by value is the default method in programming languages like C++, PHP, Visual Basic NET, and C# whereas Call by reference is supported only Java language.
Call by Value, variables are passed using a straightforward method whereas Call by Reference, pointers are required to store the address of variables.

3) how to copy by value a composite data type?

There are 3 ways to copy by value for composite data types.
Using the spread (...) operator
Using the Object.assign() method
Using the JSON.stringify() and JSON.parse() methods

1. Using Spread
Spread operator allows an iterable to expand in places where 0+ arguments are expected. It is mostly used in the variable array where there is more than 1 values are expected. It allows us the privilege to obtain a list of parameters from an array.Using spread will clone your object. Note this will be a shallow copy.
Ex: var a =[1,2,3];
var c=[...a];

2.The Object.assign() method copies all enumerable own properties from one or more source objects to a target object. It returns the target object. Note this will be a shallow copy.
Ex: var b=Object.assign([],a)
Note: Empty [] as a first argument ensures we don't mutate the first argument.

3. Using JSON.parse() and JSON.stringify()
The JSON object, available in all modern browsers, has two useful methods to deal with JSON-formatted content: parse and stringify. JSON.parse() takes a JSON string and transforms it into a JavaScript object. JSON.stringify() takes a JavaScript object and transforms it into a JSON string.Using JSON.parse() and JSON.stringify() for copy performs deep copy .

Ex: var a=[1,2,3];
var b=JSON.parse(JSON.stringyfy(a));

The deep copy is a true copy for nested objects. Shallow copy copies only reference in case of nested objects.